{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\galdv\\\\Desktop\\\\ReactProject\\\\ProjectOne\\\\src\\\\hooks\\\\UserHooks\\\\userContextApp.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/hooks/UserHooks/userContextApp.js\n\nimport React, { createContext, useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [userInformation, setUserInformation] = useState(JSON.parse(localStorage.getItem(\"userInformation\")) || null);\n  const [likedCards, setLikedCards] = useState([]);\n  useEffect(() => {\n    if (userInformation) {\n      localStorage.setItem(\"userInformation\", JSON.stringify(userInformation));\n    }\n  }, [userInformation]);\n\n  // Fetch liked cards from API when userInformation updates\n  useEffect(() => {\n    const fetchLikedCards = async () => {\n      if (userInformation && userInformation.likedCards) {\n        try {\n          const likedCardsData = await Promise.all(userInformation.likedCards.map(async cardId => {\n            const response = await axios.get(`https://monkfish-app-z9uza.ondigitalocean.app/bcard2/cards/${cardId}`);\n            return response.data;\n          }));\n          setLikedCards(likedCardsData);\n        } catch (error) {\n          console.error(\"Error fetching liked cards:\", error);\n        }\n      }\n    };\n    fetchLikedCards();\n  }, [userInformation]);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      userInformation,\n      setUserInformation,\n      likedCards\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"zGyEvbtUc1jwkGvsVkxFItRxIKY=\");\n_c = UserProvider;\nexport const useUserContext = () => {\n  _s2();\n  return useContext(UserContext);\n};\n_s2(useUserContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","axios","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","userInformation","setUserInformation","JSON","parse","localStorage","getItem","likedCards","setLikedCards","setItem","stringify","fetchLikedCards","likedCardsData","Promise","all","map","cardId","response","get","data","error","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUserContext","_s2","$RefreshReg$"],"sources":["C:/Users/galdv/Desktop/ReactProject/ProjectOne/src/hooks/UserHooks/userContextApp.jsx"],"sourcesContent":["// src/hooks/UserHooks/userContextApp.js\r\n\r\nimport React, { createContext, useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const [userInformation, setUserInformation] = useState(\r\n    JSON.parse(localStorage.getItem(\"userInformation\")) || null\r\n  );\r\n  const [likedCards, setLikedCards] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (userInformation) {\r\n      localStorage.setItem(\"userInformation\", JSON.stringify(userInformation));\r\n    }\r\n  }, [userInformation]);\r\n\r\n  // Fetch liked cards from API when userInformation updates\r\n  useEffect(() => {\r\n    const fetchLikedCards = async () => {\r\n      if (userInformation && userInformation.likedCards) {\r\n        try {\r\n          const likedCardsData = await Promise.all(\r\n            userInformation.likedCards.map(async (cardId) => {\r\n              const response = await axios.get(\r\n                `https://monkfish-app-z9uza.ondigitalocean.app/bcard2/cards/${cardId}`\r\n              );\r\n              return response.data;\r\n            })\r\n          );\r\n          setLikedCards(likedCardsData);\r\n        } catch (error) {\r\n          console.error(\"Error fetching liked cards:\", error);\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchLikedCards();\r\n  }, [userInformation]);\r\n\r\n  return (\r\n    <UserContext.Provider value={{ userInformation, setUserInformation, likedCards }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useUserContext = () => useContext(UserContext);\r\n"],"mappings":";;;AAAA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CACpDY,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC,IAAI,IACzD,CAAC;EACD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,IAAIS,eAAe,EAAE;MACnBI,YAAY,CAACI,OAAO,CAAC,iBAAiB,EAAEN,IAAI,CAACO,SAAS,CAACT,eAAe,CAAC,CAAC;IAC1E;EACF,CAAC,EAAE,CAACA,eAAe,CAAC,CAAC;;EAErB;EACAT,SAAS,CAAC,MAAM;IACd,MAAMmB,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAIV,eAAe,IAAIA,eAAe,CAACM,UAAU,EAAE;QACjD,IAAI;UACF,MAAMK,cAAc,GAAG,MAAMC,OAAO,CAACC,GAAG,CACtCb,eAAe,CAACM,UAAU,CAACQ,GAAG,CAAC,MAAOC,MAAM,IAAK;YAC/C,MAAMC,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,GAAG,CAC7B,8DAA6DF,MAAO,EACvE,CAAC;YACD,OAAOC,QAAQ,CAACE,IAAI;UACtB,CAAC,CACH,CAAC;UACDX,aAAa,CAACI,cAAc,CAAC;QAC/B,CAAC,CAAC,OAAOQ,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACrD;MACF;IACF,CAAC;IAEDT,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,CAACV,eAAe,CAAC,CAAC;EAErB,oBACEL,OAAA,CAACC,WAAW,CAACyB,QAAQ;IAACC,KAAK,EAAE;MAAEtB,eAAe;MAAEC,kBAAkB;MAAEK;IAAW,CAAE;IAAAR,QAAA,EAC9EA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC3B,EAAA,CAxCWF,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AA0CzB,OAAO,MAAM+B,cAAc,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMrC,UAAU,CAACI,WAAW,CAAC;AAAA;AAACiC,GAAA,CAA/CD,cAAc;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}