{"ast":null,"code":"import{useEffect,useContext}from\"react\";import axios from\"axios\";import{UserContext}from\"./userContextApp\";const useGetUser=()=>{const{userInformation,setUserInformation}=useContext(UserContext);const token=localStorage.getItem(\"token\");useEffect(()=>{const fetchUser=async()=>{if(!token||userInformation)return;const config={method:\"get\",maxBodyLength:Infinity,url:`https://monkfish-app-z9uza.ondigitalocean.app/bcard2/users/me`,headers:{\"x-auth-token\":token}};try{const response=await axios(config);setUserInformation(response.data);localStorage.setItem(\"user_id\",response.data._id);// Save user ID to local storage\n}catch(error){console.error(\"Error fetching user data:\",error);}};fetchUser();},[token,setUserInformation,userInformation]);// Added userInformation to the dependency array\nreturn{userInformation};};export default useGetUser;","map":{"version":3,"names":["useEffect","useContext","axios","UserContext","useGetUser","userInformation","setUserInformation","token","localStorage","getItem","fetchUser","config","method","maxBodyLength","Infinity","url","headers","response","data","setItem","_id","error","console"],"sources":["C:/Users/galdv/Desktop/MeMoment/Memoment/FrontEnd/src/hooks/UserHooks/useGetUser.jsx"],"sourcesContent":["import { useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { UserContext } from \"./userContextApp\";\r\n\r\nconst useGetUser = () => {\r\n  const { userInformation, setUserInformation } = useContext(UserContext);\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      if (!token || userInformation) return;\r\n\r\n      const config = {\r\n        method: \"get\",\r\n        maxBodyLength: Infinity,\r\n        url: `https://monkfish-app-z9uza.ondigitalocean.app/bcard2/users/me`,\r\n        headers: {\r\n          \"x-auth-token\": token,\r\n        },\r\n      };\r\n\r\n      try {\r\n        const response = await axios(config);\r\n        setUserInformation(response.data);\r\n        localStorage.setItem(\"user_id\", response.data._id); // Save user ID to local storage\r\n      } catch (error) {\r\n        console.error(\"Error fetching user data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchUser();\r\n  }, [token, setUserInformation, userInformation]); // Added userInformation to the dependency array\r\n\r\n  return { userInformation };\r\n};\r\n\r\nexport default useGetUser;\r\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,UAAU,KAAQ,OAAO,CAC7C,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,WAAW,KAAQ,kBAAkB,CAE9C,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACvB,KAAM,CAAEC,eAAe,CAAEC,kBAAmB,CAAC,CAAGL,UAAU,CAACE,WAAW,CAAC,CACvE,KAAM,CAAAI,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAE3CT,SAAS,CAAC,IAAM,CACd,KAAM,CAAAU,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,GAAI,CAACH,KAAK,EAAIF,eAAe,CAAE,OAE/B,KAAM,CAAAM,MAAM,CAAG,CACbC,MAAM,CAAE,KAAK,CACbC,aAAa,CAAEC,QAAQ,CACvBC,GAAG,CAAG,+DAA8D,CACpEC,OAAO,CAAE,CACP,cAAc,CAAET,KAClB,CACF,CAAC,CAED,GAAI,CACF,KAAM,CAAAU,QAAQ,CAAG,KAAM,CAAAf,KAAK,CAACS,MAAM,CAAC,CACpCL,kBAAkB,CAACW,QAAQ,CAACC,IAAI,CAAC,CACjCV,YAAY,CAACW,OAAO,CAAC,SAAS,CAAEF,QAAQ,CAACC,IAAI,CAACE,GAAG,CAAC,CAAE;AACtD,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACnD,CACF,CAAC,CAEDX,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,CAACH,KAAK,CAAED,kBAAkB,CAAED,eAAe,CAAC,CAAC,CAAE;AAElD,MAAO,CAAEA,eAAgB,CAAC,CAC5B,CAAC,CAED,cAAe,CAAAD,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}