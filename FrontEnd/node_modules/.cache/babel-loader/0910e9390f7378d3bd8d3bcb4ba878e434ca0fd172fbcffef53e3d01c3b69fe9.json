{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport jwtDecode from \"jwt-decode\"; // remove curly braces, it's the default export\nimport { toast } from \"react-toastify\";\nimport { UserContext } from \"./userContextApp\";\nconst useUserApi = () => {\n  _s();\n  const [isSignIn, setIsSignIn] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [isLoginData, setIsLoginData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [data, setIsData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    isBusiness: false // For event creators, still required\n  });\n  const {\n    userInformation,\n    setUserInformation\n  } = useContext(UserContext);\n  useEffect(() => {\n    const storedUserInfo = localStorage.getItem(\"userInfo\");\n    if (storedUserInfo) {\n      const decoded = JSON.parse(storedUserInfo);\n      setUserInformation(decoded);\n    }\n  }, [setUserInformation]);\n  const handleSignInClick = () => setIsSignIn(false);\n  const handleSignUpClick = () => setIsSignIn(true);\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    const updatedValue = type === \"checkbox\" ? checked : value;\n    setIsData(prevData => ({\n      ...prevData,\n      [name]: updatedValue\n    }));\n    setIsLoginData({\n      ...isLoginData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const validate = () => {\n    const newErrors = {};\n    if (!data.name || data.name.length < 2 || data.name.length > 256) {\n      newErrors.name = \"Name must be between 2 and 256 characters.\";\n    }\n    if (!data.email || data.email.length < 5) {\n      newErrors.email = \"Email must be at least 5 characters long.\";\n    }\n    if (!data.password || data.password.length < 7 || data.password.length > 20) {\n      newErrors.password = \"Password must be between 7 and 20 characters.\";\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (validate()) {\n      const configRegister = {\n        method: \"post\",\n        maxBodyLength: Infinity,\n        url: \"http://localhost:5000/api/users/register\",\n        // Adjusted for your server\n        headers: {},\n        data: data\n      };\n      try {\n        const response = await axios(configRegister);\n        toast.success(\"Registration successful!\");\n        setIsData({\n          name: \"\",\n          email: \"\",\n          password: \"\",\n          isBusiness: false\n        });\n        return response;\n      } catch (error) {\n        console.error(error);\n        toast.error(\"Registration failed!\");\n      }\n    } else {\n      console.log(\"Validation failed\");\n    }\n  };\n  const handleSubmit2 = async e => {\n    e.preventDefault();\n    const configLoding = {\n      method: \"post\",\n      maxBodyLength: Infinity,\n      url: \"http://localhost:5000/api/users/login\",\n      headers: {},\n      data: {\n        email: isLoginData.email,\n        password: isLoginData.password\n      }\n    };\n    try {\n      const response = await axios(configLoding);\n      const getToken = response.data;\n      const decoded = jwtDecode(getToken);\n      setUserInformation(decoded);\n      localStorage.setItem(\"token\", getToken);\n      setIsLoginData({\n        email: \"\",\n        password: \"\"\n      });\n      toast.success(\"Login successful!\");\n    } catch (error) {\n      console.error(error);\n      toast.error(\"Login failed!\");\n    }\n  };\n  return {\n    isSignIn,\n    errors,\n    data,\n    isLoginData,\n    handleSignInClick,\n    handleSignUpClick,\n    handleChange,\n    handleSubmit,\n    handleSubmit2\n  };\n};\n_s(useUserApi, \"0puJFWOLAMembmvBnNCHfh7aYSY=\");\nexport default useUserApi;","map":{"version":3,"names":["useContext","useState","useEffect","axios","jwtDecode","toast","UserContext","useUserApi","_s","isSignIn","setIsSignIn","errors","setErrors","isLoginData","setIsLoginData","email","password","data","setIsData","name","isBusiness","userInformation","setUserInformation","storedUserInfo","localStorage","getItem","decoded","JSON","parse","handleSignInClick","handleSignUpClick","handleChange","e","value","type","checked","target","updatedValue","prevData","validate","newErrors","length","Object","keys","handleSubmit","preventDefault","configRegister","method","maxBodyLength","Infinity","url","headers","response","success","error","console","log","handleSubmit2","configLoding","getToken","setItem"],"sources":["C:/Users/galdv/Desktop/MeMoment/Memoment/FrontEnd/src/hooks/UserHooks/useUserApi.jsx"],"sourcesContent":["import { useContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport jwtDecode from \"jwt-decode\"; // remove curly braces, it's the default export\r\nimport { toast } from \"react-toastify\";\r\nimport { UserContext } from \"./userContextApp\";\r\n\r\nconst useUserApi = () => {\r\n  const [isSignIn, setIsSignIn] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [isLoginData, setIsLoginData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [data, setIsData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    isBusiness: false, // For event creators, still required\r\n  });\r\n\r\n  const { userInformation, setUserInformation } = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    const storedUserInfo = localStorage.getItem(\"userInfo\");\r\n    if (storedUserInfo) {\r\n      const decoded = JSON.parse(storedUserInfo);\r\n      setUserInformation(decoded);\r\n    }\r\n  }, [setUserInformation]);\r\n\r\n  const handleSignInClick = () => setIsSignIn(false);\r\n  const handleSignUpClick = () => setIsSignIn(true);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    const updatedValue = type === \"checkbox\" ? checked : value;\r\n\r\n    setIsData((prevData) => ({\r\n      ...prevData,\r\n      [name]: updatedValue,\r\n    }));\r\n\r\n    setIsLoginData({ ...isLoginData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const validate = () => {\r\n    const newErrors = {};\r\n\r\n    if (!data.name || data.name.length < 2 || data.name.length > 256) {\r\n      newErrors.name = \"Name must be between 2 and 256 characters.\";\r\n    }\r\n    if (!data.email || data.email.length < 5) {\r\n      newErrors.email = \"Email must be at least 5 characters long.\";\r\n    }\r\n    if (\r\n      !data.password ||\r\n      data.password.length < 7 ||\r\n      data.password.length > 20\r\n    ) {\r\n      newErrors.password = \"Password must be between 7 and 20 characters.\";\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      const configRegister = {\r\n        method: \"post\",\r\n        maxBodyLength: Infinity,\r\n        url: \"http://localhost:5000/api/users/register\", // Adjusted for your server\r\n        headers: {},\r\n        data: data,\r\n      };\r\n      try {\r\n        const response = await axios(configRegister);\r\n        toast.success(\"Registration successful!\");\r\n        setIsData({ name: \"\", email: \"\", password: \"\", isBusiness: false });\r\n        return response;\r\n      } catch (error) {\r\n        console.error(error);\r\n        toast.error(\"Registration failed!\");\r\n      }\r\n    } else {\r\n      console.log(\"Validation failed\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit2 = async (e) => {\r\n    e.preventDefault();\r\n    const configLoding = {\r\n      method: \"post\",\r\n      maxBodyLength: Infinity,\r\n      url: \"http://localhost:5000/api/users/login\",\r\n      headers: {},\r\n      data: {\r\n        email: isLoginData.email,\r\n        password: isLoginData.password,\r\n      },\r\n    };\r\n    try {\r\n      const response = await axios(configLoding);\r\n      const getToken = response.data;\r\n      const decoded = jwtDecode(getToken);\r\n      setUserInformation(decoded);\r\n      localStorage.setItem(\"token\", getToken);\r\n      setIsLoginData({ email: \"\", password: \"\" });\r\n      toast.success(\"Login successful!\");\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"Login failed!\");\r\n    }\r\n  };\r\n\r\n  return {\r\n    isSignIn,\r\n    errors,\r\n    data,\r\n    isLoginData,\r\n    handleSignInClick,\r\n    handleSignUpClick,\r\n    handleChange,\r\n    handleSubmit,\r\n    handleSubmit2,\r\n  };\r\n};\r\n\r\nexport default useUserApi;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}