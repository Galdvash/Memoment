{"ast":null,"code":"var _s = $RefreshSig$();\n// hooks/useCardsApi.js\nimport { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport useLikeUnlike from \"./useLikeUnlike\"; // Import the useLikeUnlike hook\nimport { UserContext } from \"../UserHooks/userContextApp\";\nconst useCardsApi = () => {\n  _s();\n  const {\n    setLikedCards\n  } = useContext(UserContext); // Assuming UserContext provides setLikedCards\n  const {\n    handleLikeUnlike\n  } = useLikeUnlike(); // Fetching handleLikeUnlike from useLikeUnlike hook\n\n  const [cards, setCards] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchCards = async () => {\n      try {\n        const response = await axios.get('https://monkfish-app-z9uza.ondigitalocean.app/bcard2/cards');\n        setCards(response.data);\n        setLoading(false);\n        console.log(response.data);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n    fetchCards();\n  }, []);\n  return {\n    cards,\n    loading,\n    error,\n    handleLikeUnlike\n  }; // Return handleLikeUnlike for use in components\n};\n_s(useCardsApi, \"Dcucnd8ot8f9o0JMLlNWHg1tVzM=\", false, function () {\n  return [useLikeUnlike];\n});\nexport default useCardsApi;","map":{"version":3,"names":["useState","useEffect","useContext","axios","useLikeUnlike","UserContext","useCardsApi","_s","setLikedCards","handleLikeUnlike","cards","setCards","loading","setLoading","error","setError","fetchCards","response","get","data","console","log","err","message"],"sources":["C:/Users/galdv/Desktop/ReactProject/ProjectOne/src/hooks/useCardsHooks/useCardsApi.jsx"],"sourcesContent":["// hooks/useCardsApi.js\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport useLikeUnlike from \"./useLikeUnlike\"; // Import the useLikeUnlike hook\r\nimport { UserContext } from \"../UserHooks/userContextApp\";\r\n\r\nconst useCardsApi = () => {\r\n  const { setLikedCards } = useContext(UserContext); // Assuming UserContext provides setLikedCards\r\n  const { handleLikeUnlike } = useLikeUnlike(); // Fetching handleLikeUnlike from useLikeUnlike hook\r\n\r\n  const [cards, setCards] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchCards = async () => {\r\n      try {\r\n        const response = await axios.get('https://monkfish-app-z9uza.ondigitalocean.app/bcard2/cards');\r\n        setCards(response.data);\r\n        setLoading(false);\r\n        console.log(response.data);\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchCards();\r\n  }, []);\r\n\r\n  return { cards, loading, error, handleLikeUnlike }; // Return handleLikeUnlike for use in components\r\n};\r\n\r\nexport default useCardsApi;\r\n"],"mappings":";AAAA;AACA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AACvD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,iBAAiB,CAAC,CAAC;AAC7C,SAASC,WAAW,QAAQ,6BAA6B;AAEzD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAc,CAAC,GAAGN,UAAU,CAACG,WAAW,CAAC,CAAC,CAAC;EACnD,MAAM;IAAEI;EAAiB,CAAC,GAAGL,aAAa,CAAC,CAAC,CAAC,CAAC;;EAE9C,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMe,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,4DAA4D,CAAC;QAC9FP,QAAQ,CAACM,QAAQ,CAACE,IAAI,CAAC;QACvBN,UAAU,CAAC,KAAK,CAAC;QACjBO,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACE,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOG,GAAG,EAAE;QACZP,QAAQ,CAACO,GAAG,CAACC,OAAO,CAAC;QACrBV,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEN,KAAK;IAAEE,OAAO;IAAEE,KAAK;IAAEL;EAAiB,CAAC,CAAC,CAAC;AACtD,CAAC;AAACF,EAAA,CAzBID,WAAW;EAAA,QAEcF,aAAa;AAAA;AAyB5C,eAAeE,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}