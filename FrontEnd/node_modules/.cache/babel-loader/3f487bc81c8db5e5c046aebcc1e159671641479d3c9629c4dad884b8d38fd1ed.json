{"ast":null,"code":"import axios from \"axios\";\n\n// Fetch the uploaded selfie\nexport const fetchSelfie = async uploadedSelfie => {\n  try {\n    const response = await axios.get(`http://localhost:5000/api/selfies/${encodeURIComponent(uploadedSelfie)}`, {\n      responseType: \"blob\"\n    });\n    return URL.createObjectURL(response.data);\n  } catch (error) {\n    throw new Error(\"Error fetching selfie\");\n  }\n};\n\n// Upload the selfie\nexport const uploadSelfie = async selectedFile => {\n  const formData = new FormData();\n  formData.append(\"image\", selectedFile);\n  try {\n    const response = await axios.post(\"http://localhost:5000/api/selfies/upload\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    return response.data.message;\n  } catch (error) {\n    throw new Error(\"Error uploading selfie\");\n  }\n};\n\n// Delete the selfie\nexport const deleteSelfie = async uploadedSelfie => {\n  try {\n    await axios.delete(`http://localhost:5000/api/selfies/${encodeURIComponent(uploadedSelfie)}`);\n  } catch (error) {\n    throw new Error(\"Error deleting selfie\");\n  }\n};\n\n// Handle face recognition\nexport const handleFaceRecognition = async selectedFile => {\n  const formData = new FormData();\n  formData.append(\"sourceImage\", selectedFile);\n  try {\n    const response = await axios.post(\"http://localhost:5000/match-faces\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    return response.data.matchedImages;\n  } catch (error) {\n    throw new Error(\"Error during face recognition\");\n  }\n};","map":{"version":3,"names":["axios","fetchSelfie","uploadedSelfie","response","get","encodeURIComponent","responseType","URL","createObjectURL","data","error","Error","uploadSelfie","selectedFile","formData","FormData","append","post","headers","message","deleteSelfie","delete","handleFaceRecognition","matchedImages"],"sources":["C:/Users/galdv/Desktop/MeMoment/Memoment/FrontEnd/src/component/Momentimg/servisec/selfieServices.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Fetch the uploaded selfie\r\nexport const fetchSelfie = async (uploadedSelfie) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `http://localhost:5000/api/selfies/${encodeURIComponent(uploadedSelfie)}`,\r\n      { responseType: \"blob\" }\r\n    );\r\n    return URL.createObjectURL(response.data);\r\n  } catch (error) {\r\n    throw new Error(\"Error fetching selfie\");\r\n  }\r\n};\r\n\r\n// Upload the selfie\r\nexport const uploadSelfie = async (selectedFile) => {\r\n  const formData = new FormData();\r\n  formData.append(\"image\", selectedFile);\r\n  try {\r\n    const response = await axios.post(\r\n      \"http://localhost:5000/api/selfies/upload\",\r\n      formData,\r\n      {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      }\r\n    );\r\n    return response.data.message;\r\n  } catch (error) {\r\n    throw new Error(\"Error uploading selfie\");\r\n  }\r\n};\r\n\r\n// Delete the selfie\r\nexport const deleteSelfie = async (uploadedSelfie) => {\r\n  try {\r\n    await axios.delete(\r\n      `http://localhost:5000/api/selfies/${encodeURIComponent(uploadedSelfie)}`\r\n    );\r\n  } catch (error) {\r\n    throw new Error(\"Error deleting selfie\");\r\n  }\r\n};\r\n\r\n// Handle face recognition\r\nexport const handleFaceRecognition = async (selectedFile) => {\r\n  const formData = new FormData();\r\n  formData.append(\"sourceImage\", selectedFile);\r\n\r\n  try {\r\n    const response = await axios.post(\r\n      \"http://localhost:5000/match-faces\",\r\n      formData,\r\n      { headers: { \"Content-Type\": \"multipart/form-data\" } }\r\n    );\r\n    return response.data.matchedImages;\r\n  } catch (error) {\r\n    throw new Error(\"Error during face recognition\");\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,WAAW,GAAG,MAAOC,cAAc,IAAK;EACnD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAC7B,qCAAoCC,kBAAkB,CAACH,cAAc,CAAE,EAAC,EACzE;MAAEI,YAAY,EAAE;IAAO,CACzB,CAAC;IACD,OAAOC,GAAG,CAACC,eAAe,CAACL,QAAQ,CAACM,IAAI,CAAC;EAC3C,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC1C;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,YAAY,GAAG,MAAOC,YAAY,IAAK;EAClD,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,YAAY,CAAC;EACtC,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMH,KAAK,CAACiB,IAAI,CAC/B,0CAA0C,EAC1CH,QAAQ,EACR;MACEI,OAAO,EAAE;QAAE,cAAc,EAAE;MAAsB;IACnD,CACF,CAAC;IACD,OAAOf,QAAQ,CAACM,IAAI,CAACU,OAAO;EAC9B,CAAC,CAAC,OAAOT,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EAC3C;AACF,CAAC;;AAED;AACA,OAAO,MAAMS,YAAY,GAAG,MAAOlB,cAAc,IAAK;EACpD,IAAI;IACF,MAAMF,KAAK,CAACqB,MAAM,CACf,qCAAoChB,kBAAkB,CAACH,cAAc,CAAE,EAC1E,CAAC;EACH,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC1C;AACF,CAAC;;AAED;AACA,OAAO,MAAMW,qBAAqB,GAAG,MAAOT,YAAY,IAAK;EAC3D,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEH,YAAY,CAAC;EAE5C,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMH,KAAK,CAACiB,IAAI,CAC/B,mCAAmC,EACnCH,QAAQ,EACR;MAAEI,OAAO,EAAE;QAAE,cAAc,EAAE;MAAsB;IAAE,CACvD,CAAC;IACD,OAAOf,QAAQ,CAACM,IAAI,CAACc,aAAa;EACpC,CAAC,CAAC,OAAOb,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;EAClD;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}