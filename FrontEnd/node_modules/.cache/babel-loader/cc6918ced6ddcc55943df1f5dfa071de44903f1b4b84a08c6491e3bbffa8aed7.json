{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nconst useRandomNumber = (initialValue = []) => {\n  _s();\n  const [randomNumber, setRandomNumber] = useState(initialValue);\n  const generateRandomNumber = () => {\n    const newRandomNumber = Math.floor(Math.random() * 100); // Generate a random number between 0 and 99\n\n    setRandomNumber(randomNumber + \" - \" + newRandomNumber);\n  };\n  return [randomNumber, generateRandomNumber];\n};\n_s(useRandomNumber, \"IWSR0X2bdRIYZRXmM/eB790uEC4=\");\nexport default useRandomNumber;","map":{"version":3,"names":["useState","useRandomNumber","initialValue","_s","randomNumber","setRandomNumber","generateRandomNumber","newRandomNumber","Math","floor","random"],"sources":["C:/Users/galdv/Desktop/React/ExsersiceReact/Project/src/radnomNumber/useRandomNumber.jsx"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useRandomNumber = (initialValue = []) => {\r\n  const [randomNumber, setRandomNumber] = useState(initialValue);\r\n\r\n  const generateRandomNumber = () => {\r\n    const newRandomNumber = Math.floor(Math.random() * 100); // Generate a random number between 0 and 99\r\n\r\n    setRandomNumber(randomNumber + \" - \" + newRandomNumber);\r\n  };\r\n\r\n  return [randomNumber, generateRandomNumber];\r\n};\r\n\r\nexport default useRandomNumber;\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,eAAe,GAAGA,CAACC,YAAY,GAAG,EAAE,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGL,QAAQ,CAACE,YAAY,CAAC;EAE9D,MAAMI,oBAAoB,GAAGA,CAAA,KAAM;IACjC,MAAMC,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;;IAEzDL,eAAe,CAACD,YAAY,GAAG,KAAK,GAAGG,eAAe,CAAC;EACzD,CAAC;EAED,OAAO,CAACH,YAAY,EAAEE,oBAAoB,CAAC;AAC7C,CAAC;AAACH,EAAA,CAVIF,eAAe;AAYrB,eAAeA,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}