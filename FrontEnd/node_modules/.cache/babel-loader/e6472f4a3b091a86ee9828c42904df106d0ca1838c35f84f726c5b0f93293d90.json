{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { toast } from \"react-toastify\";\nimport { UserContext } from \"./userContextApp\";\nconst useUserApi = () => {\n  _s();\n  const [isSignIn, setIsSignIn] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [isLoginData, setIsLoginData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [data, setIsData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    isBusiness: false // remains for now as it’s part of the form\n  });\n  const {\n    userInformation,\n    setUserInformation\n  } = useContext(UserContext);\n  useEffect(() => {\n    const storedUserInfo = localStorage.getItem(\"userInfo\");\n    if (storedUserInfo) {\n      const decoded = JSON.parse(storedUserInfo);\n      setUserInformation(decoded);\n      console.log(decoded);\n    }\n  }, [setUserInformation]);\n  console.log(userInformation);\n  const handleSignInClick = () => {\n    setIsSignIn(false);\n  };\n  const handleSignUpClick = () => {\n    setIsSignIn(true);\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    const updatedValue = type === \"checkbox\" ? checked : value;\n    setIsData(prevData => {\n      const keys = name.split(\".\");\n      if (keys.length > 1) {\n        return {\n          ...prevData,\n          [keys[0]]: {\n            ...prevData[keys[0]],\n            [keys[1]]: updatedValue\n          }\n        };\n      } else {\n        return {\n          ...prevData,\n          [name]: updatedValue\n        };\n      }\n    });\n    setIsLoginData({\n      ...isLoginData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const validate = () => {\n    const newErrors = {};\n    const validateField = (key, value) => {\n      switch (key) {\n        case \"name.first\":\n          if (!value || value.length < 2 || value.length > 256) {\n            newErrors.first = \"First name must be between 2 and 256 characters.\";\n          }\n          console.log(newErrors.first);\n          break;\n        case \"name.middle\":\n          if (value && (value.length < 2 || value.length > 256)) {\n            newErrors.middle = \"Middle name must be between 2 and 256 characters.\";\n          }\n          break;\n        case \"name.last\":\n          if (!value || value.length < 2 || value.length > 256) {\n            newErrors.last = \"Last name must be between 2 and 256 characters.\";\n          }\n          break;\n        case \"phone\":\n          if (!value || value.length < 9 || value.length > 11) {\n            newErrors.phone = \"Phone number must be between 9 and 11 characters.\";\n          }\n          break;\n        case \"email\":\n          if (!value || value.length < 5) {\n            newErrors.email = \"Email must be at least 5 characters long.\";\n          }\n          break;\n        case \"password\":\n          if (!value || value.length < 7 || value.length > 20) {\n            newErrors.password = \"Password must be between 7 and 20 characters.\";\n          }\n          break;\n        case \"image.url\":\n          if (value && value.length < 14) {\n            newErrors.url = \"Image URL must be at least 14 characters long.\";\n          }\n          break;\n        case \"image.alt\":\n          if (value && (value.length < 2 || value.length > 256)) {\n            newErrors.alt = \"Image description must be between 2 and 256 characters.\";\n          }\n          break;\n        case \"address.state\":\n          if (value && (value.length < 2 || value.length > 256)) {\n            newErrors.state = \"State must be between 2 and 256 characters.\";\n          }\n          break;\n        case \"address.country\":\n          if (!value || value.length < 2 || value.length > 256) {\n            newErrors.country = \"Country must be between 2 and 256 characters.\";\n          }\n          break;\n        case \"address.city\":\n          if (!value || value.length < 2 || value.length > 256) {\n            newErrors.city = \"City must be between 2 and 256 characters.\";\n          }\n          break;\n        case \"address.street\":\n          if (!value || value.length < 2 || value.length > 256) {\n            newErrors.street = \"Street must be between 2 and 256 characters.\";\n          }\n          break;\n        case \"address.houseNumber\":\n          if (!value || value < 2 || value > 256) {\n            newErrors.houseNumber = \"House number must be between 2 and 256.\";\n          }\n          break;\n        case \"isBusiness\":\n          if (typeof value !== \"boolean\") {\n            newErrors.isBusiness = \"Business status must be specified.\";\n          }\n          break;\n        case \"isAdmin\":\n          if (typeof value !== \"boolean\") {\n            newErrors.isAdmin = \"Admin status must be specified.\";\n          }\n          break;\n        default:\n          break;\n      }\n    };\n    const validateObject = obj => {\n      Object.keys(obj).forEach(key => {\n        if (typeof obj[key] === \"object\" && !Array.isArray(obj[key])) {\n          validateObject(obj[key]);\n        } else {\n          validateField(key, obj[key]);\n        }\n      });\n    };\n    validateObject(data);\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (validate()) {\n      const configRegister = {\n        method: \"post\",\n        maxBodyLength: Infinity,\n        url: \"https://monkfish-app-z9uza.ondigitalocean.app/bcard2/users\",\n        headers: {},\n        data: data\n      };\n      try {\n        const response = await axios(configRegister);\n        toast.success(\"Registration successful!\");\n        setIsData({\n          name: {\n            first: \"\",\n            middle: \"\",\n            last: \"\"\n          },\n          phone: \"\",\n          email: \"\",\n          password: \"\",\n          image: {\n            url: \"\",\n            alt: \"\"\n          },\n          address: {\n            state: \"\",\n            country: \"\",\n            city: \"\",\n            street: \"\",\n            houseNumber: \"\",\n            zip: \"\"\n          },\n          isBusiness: false,\n          isAdmin: false\n        });\n        return response;\n      } catch (error) {\n        console.error(error);\n        toast.error(\"Registration failed!\");\n      }\n    } else {\n      console.log(\"Validation failed\");\n    }\n  };\n  //lOGIN\n  const handleSubmit2 = async e => {\n    e.preventDefault();\n    const configLoding = {\n      method: \"post\",\n      maxBodyLength: Infinity,\n      url: \"https://monkfish-app-z9uza.ondigitalocean.app/bcard2/users/login\",\n      headers: {},\n      data: {\n        email: isLoginData.email,\n        password: isLoginData.password\n      }\n    };\n    try {\n      const response = await axios(configLoding);\n      console.log(response.data);\n      const getToken = response.data;\n      const decoded = jwtDecode(getToken);\n      console.log(decoded);\n      setUserInformation(decoded);\n      localStorage.setItem(\"token\", getToken);\n      setIsLoginData({\n        email: \"\",\n        password: \"\"\n      });\n      toast.success(\"Login successful!\");\n    } catch (error) {\n      console.error(error);\n      toast.error(\"Login failed!\");\n    }\n  };\n  return {\n    isSignIn,\n    errors,\n    data,\n    isLoginData,\n    handleSignInClick,\n    handleSignUpClick,\n    handleChange,\n    handleSubmit,\n    handleSubmit2\n  };\n};\n_s(useUserApi, \"t1ysf6ONBbENTIfdUHfCJ6I3F5E=\");\nexport default useUserApi;","map":{"version":3,"names":["useContext","useState","useEffect","axios","jwtDecode","toast","UserContext","useUserApi","_s","isSignIn","setIsSignIn","errors","setErrors","isLoginData","setIsLoginData","email","password","data","setIsData","name","isBusiness","userInformation","setUserInformation","storedUserInfo","localStorage","getItem","decoded","JSON","parse","console","log","handleSignInClick","handleSignUpClick","handleChange","e","value","type","checked","target","updatedValue","prevData","keys","split","length","validate","newErrors","validateField","key","first","middle","last","phone","url","alt","state","country","city","street","houseNumber","isAdmin","validateObject","obj","Object","forEach","Array","isArray","handleSubmit","preventDefault","configRegister","method","maxBodyLength","Infinity","headers","response","success","image","address","zip","error","handleSubmit2","configLoding","getToken","setItem"],"sources":["C:/Users/galdv/Desktop/MeMoment/Memoment/FrontEnd/src/hooks/UserHooks/useUserApi.jsx"],"sourcesContent":["import { useContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport { toast } from \"react-toastify\";\r\nimport { UserContext } from \"./userContextApp\";\r\n\r\nconst useUserApi = () => {\r\n  const [isSignIn, setIsSignIn] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [isLoginData, setIsLoginData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [data, setIsData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    isBusiness: false, // remains for now as it’s part of the form\r\n  });\r\n\r\n  const { userInformation, setUserInformation } = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    const storedUserInfo = localStorage.getItem(\"userInfo\");\r\n    if (storedUserInfo) {\r\n      const decoded = JSON.parse(storedUserInfo);\r\n      setUserInformation(decoded);\r\n      console.log(decoded);\r\n    }\r\n  }, [setUserInformation]);\r\n\r\n  console.log(userInformation);\r\n\r\n  const handleSignInClick = () => {\r\n    setIsSignIn(false);\r\n  };\r\n\r\n  const handleSignUpClick = () => {\r\n    setIsSignIn(true);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    const updatedValue = type === \"checkbox\" ? checked : value;\r\n\r\n    setIsData((prevData) => {\r\n      const keys = name.split(\".\");\r\n      if (keys.length > 1) {\r\n        return {\r\n          ...prevData,\r\n          [keys[0]]: {\r\n            ...prevData[keys[0]],\r\n            [keys[1]]: updatedValue,\r\n          },\r\n        };\r\n      } else {\r\n        return {\r\n          ...prevData,\r\n          [name]: updatedValue,\r\n        };\r\n      }\r\n    });\r\n    setIsLoginData({ ...isLoginData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const validate = () => {\r\n    const newErrors = {};\r\n\r\n    const validateField = (key, value) => {\r\n      switch (key) {\r\n        case \"name.first\":\r\n          if (!value || value.length < 2 || value.length > 256) {\r\n            newErrors.first =\r\n              \"First name must be between 2 and 256 characters.\";\r\n          }\r\n          console.log(newErrors.first);\r\n          break;\r\n        case \"name.middle\":\r\n          if (value && (value.length < 2 || value.length > 256)) {\r\n            newErrors.middle =\r\n              \"Middle name must be between 2 and 256 characters.\";\r\n          }\r\n          break;\r\n        case \"name.last\":\r\n          if (!value || value.length < 2 || value.length > 256) {\r\n            newErrors.last = \"Last name must be between 2 and 256 characters.\";\r\n          }\r\n          break;\r\n        case \"phone\":\r\n          if (!value || value.length < 9 || value.length > 11) {\r\n            newErrors.phone =\r\n              \"Phone number must be between 9 and 11 characters.\";\r\n          }\r\n          break;\r\n        case \"email\":\r\n          if (!value || value.length < 5) {\r\n            newErrors.email = \"Email must be at least 5 characters long.\";\r\n          }\r\n          break;\r\n        case \"password\":\r\n          if (!value || value.length < 7 || value.length > 20) {\r\n            newErrors.password =\r\n              \"Password must be between 7 and 20 characters.\";\r\n          }\r\n          break;\r\n        case \"image.url\":\r\n          if (value && value.length < 14) {\r\n            newErrors.url = \"Image URL must be at least 14 characters long.\";\r\n          }\r\n          break;\r\n        case \"image.alt\":\r\n          if (value && (value.length < 2 || value.length > 256)) {\r\n            newErrors.alt =\r\n              \"Image description must be between 2 and 256 characters.\";\r\n          }\r\n          break;\r\n        case \"address.state\":\r\n          if (value && (value.length < 2 || value.length > 256)) {\r\n            newErrors.state = \"State must be between 2 and 256 characters.\";\r\n          }\r\n          break;\r\n        case \"address.country\":\r\n          if (!value || value.length < 2 || value.length > 256) {\r\n            newErrors.country = \"Country must be between 2 and 256 characters.\";\r\n          }\r\n          break;\r\n        case \"address.city\":\r\n          if (!value || value.length < 2 || value.length > 256) {\r\n            newErrors.city = \"City must be between 2 and 256 characters.\";\r\n          }\r\n          break;\r\n        case \"address.street\":\r\n          if (!value || value.length < 2 || value.length > 256) {\r\n            newErrors.street = \"Street must be between 2 and 256 characters.\";\r\n          }\r\n          break;\r\n        case \"address.houseNumber\":\r\n          if (!value || value < 2 || value > 256) {\r\n            newErrors.houseNumber = \"House number must be between 2 and 256.\";\r\n          }\r\n          break;\r\n        case \"isBusiness\":\r\n          if (typeof value !== \"boolean\") {\r\n            newErrors.isBusiness = \"Business status must be specified.\";\r\n          }\r\n          break;\r\n        case \"isAdmin\":\r\n          if (typeof value !== \"boolean\") {\r\n            newErrors.isAdmin = \"Admin status must be specified.\";\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n\r\n    const validateObject = (obj) => {\r\n      Object.keys(obj).forEach((key) => {\r\n        if (typeof obj[key] === \"object\" && !Array.isArray(obj[key])) {\r\n          validateObject(obj[key]);\r\n        } else {\r\n          validateField(key, obj[key]);\r\n        }\r\n      });\r\n    };\r\n    validateObject(data);\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      const configRegister = {\r\n        method: \"post\",\r\n        maxBodyLength: Infinity,\r\n        url: \"https://monkfish-app-z9uza.ondigitalocean.app/bcard2/users\",\r\n        headers: {},\r\n        data: data,\r\n      };\r\n      try {\r\n        const response = await axios(configRegister);\r\n        toast.success(\"Registration successful!\");\r\n        setIsData({\r\n          name: { first: \"\", middle: \"\", last: \"\" },\r\n          phone: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          image: { url: \"\", alt: \"\" },\r\n          address: {\r\n            state: \"\",\r\n            country: \"\",\r\n            city: \"\",\r\n            street: \"\",\r\n            houseNumber: \"\",\r\n            zip: \"\",\r\n          },\r\n          isBusiness: false,\r\n          isAdmin: false,\r\n        });\r\n        return response;\r\n      } catch (error) {\r\n        console.error(error);\r\n        toast.error(\"Registration failed!\");\r\n      }\r\n    } else {\r\n      console.log(\"Validation failed\");\r\n    }\r\n  };\r\n  //lOGIN\r\n  const handleSubmit2 = async (e) => {\r\n    e.preventDefault();\r\n    const configLoding = {\r\n      method: \"post\",\r\n      maxBodyLength: Infinity,\r\n      url: \"https://monkfish-app-z9uza.ondigitalocean.app/bcard2/users/login\",\r\n      headers: {},\r\n      data: {\r\n        email: isLoginData.email,\r\n        password: isLoginData.password,\r\n      },\r\n    };\r\n    try {\r\n      const response = await axios(configLoding);\r\n      console.log(response.data);\r\n      const getToken = response.data;\r\n      const decoded = jwtDecode(getToken);\r\n      console.log(decoded);\r\n      setUserInformation(decoded);\r\n      localStorage.setItem(\"token\", getToken);\r\n      setIsLoginData({ email: \"\", password: \"\" });\r\n      toast.success(\"Login successful!\");\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"Login failed!\");\r\n    }\r\n  };\r\n  return {\r\n    isSignIn,\r\n    errors,\r\n    data,\r\n    isLoginData,\r\n    handleSignInClick,\r\n    handleSignUpClick,\r\n    handleChange,\r\n    handleSubmit,\r\n    handleSubmit2,\r\n  };\r\n};\r\n\r\nexport default useUserApi;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}