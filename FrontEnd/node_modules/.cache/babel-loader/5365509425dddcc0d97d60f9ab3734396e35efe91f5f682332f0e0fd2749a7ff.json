{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\galdv\\\\Desktop\\\\MeMoment\\\\Memoment\\\\FrontEnd\\\\src\\\\component\\\\Momentimg\\\\MatchedImages.jsx\",\n  _s = $RefreshSig$();\n// frontend/src/components/MatchedImages.js\nimport React, { useState } from \"react\";\nimport JSZip from \"jszip\";\nimport { saveAs } from \"file-saver\"; // נשתמש בספרייה זו לשמירת הקובץ\nimport \"./MatchedImages.css\"; // אם יש לך קובץ CSS מותאם אישית\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MatchedImages = ({\n  images\n}) => {\n  _s();\n  const [selectedImages, setSelectedImages] = useState([]);\n  const handleCheckboxChange = (e, filename) => {\n    if (e.target.checked) {\n      setSelectedImages([...selectedImages, filename]);\n    } else {\n      setSelectedImages(selectedImages.filter(img => img !== filename));\n    }\n  };\n  const handleDownloadSelected = async () => {\n    if (selectedImages.length === 0) {\n      alert(\"Please select at least one image to download.\");\n      return;\n    }\n    const zip = new JSZip();\n    const folder = zip.folder(\"matched_images\");\n\n    // Fetch each image and add it to the zip\n    const fetchImage = async filename => {\n      const response = await fetch(`http://localhost:5000/api/images/${encodeURIComponent(filename)}`);\n      const blob = await response.blob();\n      folder.file(filename, blob);\n    };\n    try {\n      await Promise.all(selectedImages.map(filename => fetchImage(filename)));\n      const content = await zip.generateAsync({\n        type: \"blob\"\n      });\n      saveAs(content, \"matched_images.zip\");\n    } catch (error) {\n      console.error(\"Error downloading images:\", error);\n      alert(\"There was an error downloading the images.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Matched Event Images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDownloadSelected,\n      disabled: selectedImages.length === 0,\n      style: {\n        marginBottom: \"20px\",\n        padding: \"10px 20px\",\n        backgroundColor: selectedImages.length === 0 ? \"gray\" : \"#4CAF50\",\n        color: \"white\",\n        border: \"none\",\n        borderRadius: \"5px\",\n        cursor: selectedImages.length === 0 ? \"not-allowed\" : \"pointer\"\n      },\n      children: \"Download Selected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\"\n      },\n      children: images.map((filename, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"10px\",\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:5000/api/images/${encodeURIComponent(filename)}`,\n          alt: \"\\u05D3\",\n          style: {\n            width: \"150px\",\n            height: \"150px\",\n            objectFit: \"cover\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: filename\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: e => handleCheckboxChange(e, filename),\n            checked: selectedImages.includes(filename)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), \"Select\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(MatchedImages, \"H8NCClQcTTYNgFIkNepsXMggwvc=\");\n_c = MatchedImages;\nexport default MatchedImages;\nvar _c;\n$RefreshReg$(_c, \"MatchedImages\");","map":{"version":3,"names":["React","useState","JSZip","saveAs","jsxDEV","_jsxDEV","MatchedImages","images","_s","selectedImages","setSelectedImages","handleCheckboxChange","e","filename","target","checked","filter","img","handleDownloadSelected","length","alert","zip","folder","fetchImage","response","fetch","encodeURIComponent","blob","file","Promise","all","map","content","generateAsync","type","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","style","marginBottom","padding","backgroundColor","color","border","borderRadius","cursor","display","flexWrap","index","margin","textAlign","src","alt","width","height","objectFit","onChange","includes","_c","$RefreshReg$"],"sources":["C:/Users/galdv/Desktop/MeMoment/Memoment/FrontEnd/src/component/Momentimg/MatchedImages.jsx"],"sourcesContent":["// frontend/src/components/MatchedImages.js\r\nimport React, { useState } from \"react\";\r\nimport JSZip from \"jszip\";\r\nimport { saveAs } from \"file-saver\"; // נשתמש בספרייה זו לשמירת הקובץ\r\nimport \"./MatchedImages.css\"; // אם יש לך קובץ CSS מותאם אישית\r\n\r\nconst MatchedImages = ({ images }) => {\r\n  const [selectedImages, setSelectedImages] = useState([]);\r\n\r\n  const handleCheckboxChange = (e, filename) => {\r\n    if (e.target.checked) {\r\n      setSelectedImages([...selectedImages, filename]);\r\n    } else {\r\n      setSelectedImages(selectedImages.filter((img) => img !== filename));\r\n    }\r\n  };\r\n\r\n  const handleDownloadSelected = async () => {\r\n    if (selectedImages.length === 0) {\r\n      alert(\"Please select at least one image to download.\");\r\n      return;\r\n    }\r\n\r\n    const zip = new JSZip();\r\n    const folder = zip.folder(\"matched_images\");\r\n\r\n    // Fetch each image and add it to the zip\r\n    const fetchImage = async (filename) => {\r\n      const response = await fetch(\r\n        `http://localhost:5000/api/images/${encodeURIComponent(filename)}`\r\n      );\r\n      const blob = await response.blob();\r\n      folder.file(filename, blob);\r\n    };\r\n\r\n    try {\r\n      await Promise.all(selectedImages.map((filename) => fetchImage(filename)));\r\n      const content = await zip.generateAsync({ type: \"blob\" });\r\n      saveAs(content, \"matched_images.zip\");\r\n    } catch (error) {\r\n      console.error(\"Error downloading images:\", error);\r\n      alert(\"There was an error downloading the images.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Matched Event Images</h2>\r\n      <button\r\n        onClick={handleDownloadSelected}\r\n        disabled={selectedImages.length === 0}\r\n        style={{\r\n          marginBottom: \"20px\",\r\n          padding: \"10px 20px\",\r\n          backgroundColor: selectedImages.length === 0 ? \"gray\" : \"#4CAF50\",\r\n          color: \"white\",\r\n          border: \"none\",\r\n          borderRadius: \"5px\",\r\n          cursor: selectedImages.length === 0 ? \"not-allowed\" : \"pointer\",\r\n        }}\r\n      >\r\n        Download Selected\r\n      </button>\r\n      <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\r\n        {images.map((filename, index) => (\r\n          <div key={index} style={{ margin: \"10px\", textAlign: \"center\" }}>\r\n            <img\r\n              src={`http://localhost:5000/api/images/${encodeURIComponent(\r\n                filename\r\n              )}`}\r\n              alt=\"ד\"\r\n              style={{ width: \"150px\", height: \"150px\", objectFit: \"cover\" }}\r\n            />\r\n            <p>{filename}</p>\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                onChange={(e) => handleCheckboxChange(e, filename)}\r\n                checked={selectedImages.includes(filename)}\r\n              />\r\n              Select\r\n            </label>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MatchedImages;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}