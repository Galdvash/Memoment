{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { UserContext } from \"./userContextApp\";\nconst useGetUser = () => {\n  _s();\n  const {\n    userInformation,\n    setUserInformation\n  } = useContext(UserContext);\n  const token = localStorage.getItem(\"token\");\n  useEffect(() => {\n    const fetchUser = async () => {\n      if (!token || userInformation) return;\n      const config = {\n        method: \"get\",\n        maxBodyLength: Infinity,\n        url: `https://monkfish-app-z9uza.ondigitalocean.app/bcard2/users/me`,\n        headers: {\n          \"x-auth-token\": token\n        }\n      };\n      try {\n        const response = await axios(config);\n        setUserInformation(response.data);\n        localStorage.setItem(\"user_id\", response.data._id); // Save user ID to local storage\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n      }\n    };\n    fetchUser();\n  }, [token, setUserInformation, userInformation]); // Added userInformation to the dependency array\n\n  return {\n    userInformation\n  };\n};\n_s(useGetUser, \"hP12SbBTPuzLNyDoJ2CyignlNc0=\");\nexport default useGetUser;","map":{"version":3,"names":["useEffect","useContext","axios","UserContext","useGetUser","_s","userInformation","setUserInformation","token","localStorage","getItem","fetchUser","config","method","maxBodyLength","Infinity","url","headers","response","data","setItem","_id","error","console"],"sources":["C:/Users/galdv/Desktop/MeMoment/Memoment/FrontEnd/src/hooks/UserHooks/useGetUser.jsx"],"sourcesContent":["import { useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { UserContext } from \"./userContextApp\";\r\n\r\nconst useGetUser = () => {\r\n  const { userInformation, setUserInformation } = useContext(UserContext);\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      if (!token || userInformation) return;\r\n\r\n      const config = {\r\n        method: \"get\",\r\n        maxBodyLength: Infinity,\r\n        url: `https://monkfish-app-z9uza.ondigitalocean.app/bcard2/users/me`,\r\n        headers: {\r\n          \"x-auth-token\": token,\r\n        },\r\n      };\r\n\r\n      try {\r\n        const response = await axios(config);\r\n        setUserInformation(response.data);\r\n        localStorage.setItem(\"user_id\", response.data._id); // Save user ID to local storage\r\n      } catch (error) {\r\n        console.error(\"Error fetching user data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchUser();\r\n  }, [token, setUserInformation, userInformation]); // Added userInformation to the dependency array\r\n\r\n  return { userInformation };\r\n};\r\n\r\nexport default useGetUser;\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC,eAAe;IAAEC;EAAmB,CAAC,GAAGN,UAAU,CAACE,WAAW,CAAC;EACvE,MAAMK,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3CV,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI,CAACH,KAAK,IAAIF,eAAe,EAAE;MAE/B,MAAMM,MAAM,GAAG;QACbC,MAAM,EAAE,KAAK;QACbC,aAAa,EAAEC,QAAQ;QACvBC,GAAG,EAAG,+DAA8D;QACpEC,OAAO,EAAE;UACP,cAAc,EAAET;QAClB;MACF,CAAC;MAED,IAAI;QACF,MAAMU,QAAQ,GAAG,MAAMhB,KAAK,CAACU,MAAM,CAAC;QACpCL,kBAAkB,CAACW,QAAQ,CAACC,IAAI,CAAC;QACjCV,YAAY,CAACW,OAAO,CAAC,SAAS,EAAEF,QAAQ,CAACC,IAAI,CAACE,GAAG,CAAC,CAAC,CAAC;MACtD,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAEDX,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACH,KAAK,EAAED,kBAAkB,EAAED,eAAe,CAAC,CAAC,CAAC,CAAC;;EAElD,OAAO;IAAEA;EAAgB,CAAC;AAC5B,CAAC;AAACD,EAAA,CA9BID,UAAU;AAgChB,eAAeA,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}