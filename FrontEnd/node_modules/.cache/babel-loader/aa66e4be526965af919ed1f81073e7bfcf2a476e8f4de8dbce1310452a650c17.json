{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\galdv\\\\Desktop\\\\React\\\\NewOne\\\\Project\\\\src\\\\component\\\\Father.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useReducer } from \"react\";\nimport Child from \"./Child\";\n\n// Define action types\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst actionTypes = {\n  SET_FRUIT_LIST: \"SET_FRUIT_LIST\",\n  TOGGLE_SHOW_LIST: \"TOGGLE_SHOW_LIST\"\n};\n\n// Define reducer function\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case actionTypes.SET_FRUIT_LIST:\n      return {\n        ...state,\n        fruitList: action.payload\n      };\n    case actionTypes.TOGGLE_SHOW_LIST:\n      return {\n        ...state,\n        showList: !state.showList\n      };\n    default:\n      return state;\n  }\n};\nconst Father = () => {\n  _s();\n  // Define initial state\n  const initialState = {\n    fruitList: [\"apple\", \"pear\", \"banana\"],\n    showList: false\n  };\n\n  // Use useReducer to manage state\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  // Destructure state\n  const {\n    fruitList,\n    showList\n  } = state;\n\n  // Dummy fruit data\n  const fruitData = [\"apple\", \"pear\", \"banana\"];\n  useEffect(() => {\n    // Initialize fruitList state with fruitData when the component mounts\n    dispatch({\n      type: actionTypes.SET_FRUIT_LIST,\n      payload: fruitData\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello, I'm The Father\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: actionTypes.TOGGLE_SHOW_LIST\n      }),\n      children: [showList ? \"Hide\" : \"Show\", \" List\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), showList && /*#__PURE__*/_jsxDEV(Child, {\n      name: \"Gal\",\n      fruitList: fruitList,\n      updateVeg: updateVeg,\n      updateFruit: updateFruitList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Father, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = Father;\nexport default Father;\nvar _c;\n$RefreshReg$(_c, \"Father\");","map":{"version":3,"names":["React","useEffect","useReducer","Child","jsxDEV","_jsxDEV","actionTypes","SET_FRUIT_LIST","TOGGLE_SHOW_LIST","reducer","state","action","type","fruitList","payload","showList","Father","_s","initialState","dispatch","fruitData","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","name","updateVeg","updateFruit","updateFruitList","_c","$RefreshReg$"],"sources":["C:/Users/galdv/Desktop/React/NewOne/Project/src/component/Father.jsx"],"sourcesContent":["import React, { useEffect, useReducer } from \"react\";\r\nimport Child from \"./Child\";\r\n\r\n// Define action types\r\nconst actionTypes = {\r\n  SET_FRUIT_LIST: \"SET_FRUIT_LIST\",\r\n  TOGGLE_SHOW_LIST: \"TOGGLE_SHOW_LIST\",\r\n};\r\n\r\n// Define reducer function\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_FRUIT_LIST:\r\n      return { ...state, fruitList: action.payload };\r\n    case actionTypes.TOGGLE_SHOW_LIST:\r\n      return { ...state, showList: !state.showList };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Father = () => {\r\n  // Define initial state\r\n  const initialState = {\r\n    fruitList: [\"apple\", \"pear\", \"banana\"],\r\n    showList: false,\r\n  };\r\n\r\n  // Use useReducer to manage state\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  // Destructure state\r\n  const { fruitList, showList } = state;\r\n\r\n  // Dummy fruit data\r\n  const fruitData = [\"apple\", \"pear\", \"banana\"];\r\n\r\n  useEffect(() => {\r\n    // Initialize fruitList state with fruitData when the component mounts\r\n    dispatch({ type: actionTypes.SET_FRUIT_LIST, payload: fruitData });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Hello, I'm The Father</h1>\r\n\r\n      <button onClick={() => dispatch({ type: actionTypes.TOGGLE_SHOW_LIST })}>\r\n        {showList ? \"Hide\" : \"Show\"} List\r\n      </button>\r\n\r\n      {showList && (\r\n        <Child\r\n          name=\"Gal\"\r\n          fruitList={fruitList}\r\n          updateVeg={updateVeg}\r\n          updateFruit={updateFruitList}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Father;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AACpD,OAAOC,KAAK,MAAM,SAAS;;AAE3B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAG;EAClBC,cAAc,EAAE,gBAAgB;EAChCC,gBAAgB,EAAE;AACpB,CAAC;;AAED;AACA,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACjC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKN,WAAW,CAACC,cAAc;MAC7B,OAAO;QAAE,GAAGG,KAAK;QAAEG,SAAS,EAAEF,MAAM,CAACG;MAAQ,CAAC;IAChD,KAAKR,WAAW,CAACE,gBAAgB;MAC/B,OAAO;QAAE,GAAGE,KAAK;QAAEK,QAAQ,EAAE,CAACL,KAAK,CAACK;MAAS,CAAC;IAChD;MACE,OAAOL,KAAK;EAChB;AACF,CAAC;AAED,MAAMM,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB;EACA,MAAMC,YAAY,GAAG;IACnBL,SAAS,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,CAAC;IACtCE,QAAQ,EAAE;EACZ,CAAC;;EAED;EACA,MAAM,CAACL,KAAK,EAAES,QAAQ,CAAC,GAAGjB,UAAU,CAACO,OAAO,EAAES,YAAY,CAAC;;EAE3D;EACA,MAAM;IAAEL,SAAS;IAAEE;EAAS,CAAC,GAAGL,KAAK;;EAErC;EACA,MAAMU,SAAS,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,CAAC;EAE7CnB,SAAS,CAAC,MAAM;IACd;IACAkB,QAAQ,CAAC;MAAEP,IAAI,EAAEN,WAAW,CAACC,cAAc;MAAEO,OAAO,EAAEM;IAAU,CAAC,CAAC;EACpE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE9BpB,OAAA;MAAQqB,OAAO,EAAEA,CAAA,KAAMP,QAAQ,CAAC;QAAEP,IAAI,EAAEN,WAAW,CAACE;MAAiB,CAAC,CAAE;MAAAa,QAAA,GACrEN,QAAQ,GAAG,MAAM,GAAG,MAAM,EAAC,OAC9B;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAERV,QAAQ,iBACPV,OAAA,CAACF,KAAK;MACJwB,IAAI,EAAC,KAAK;MACVd,SAAS,EAAEA,SAAU;MACrBe,SAAS,EAAEA,SAAU;MACrBC,WAAW,EAAEC;IAAgB;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACR,EAAA,CAvCID,MAAM;AAAAe,EAAA,GAANf,MAAM;AAyCZ,eAAeA,MAAM;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}