{"ast":null,"code":"var _s = $RefreshSig$();\n// hooks/useLikeUnlike.js\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nconst useLikeUnlike = ({\n  cardId,\n  setLikedCards\n}) => {\n  _s();\n  useEffect(() => {\n    const likeUnlike = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const configLikes = {\n          method: \"patch\",\n          url: `https://monkfish-app-z9uza.ondigitalocean.app/bcard2/cards/${cardId}`,\n          headers: {\n            \"x-auth-token\": token\n          }\n        };\n        await axios(configLikes);\n\n        // Update likedCards state\n        setLikedCards(prevLikedCards => {\n          if (prevLikedCards.includes(cardId)) {\n            return prevLikedCards.filter(id => id !== cardId); // Unlike\n          } else {\n            return [...prevLikedCards, cardId]; // Like\n          }\n        });\n        console.log(\"Successfully liked/unliked card\");\n      } catch (error) {\n        console.error(\"Error liking/unliking card:\", error.message);\n      }\n    };\n    likeUnlike();\n  }, [cardId, setLikedCards]);\n};\n_s(useLikeUnlike, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nexport default useLikeUnlike;","map":{"version":3,"names":["useEffect","axios","useLikeUnlike","cardId","setLikedCards","_s","likeUnlike","token","localStorage","getItem","configLikes","method","url","headers","prevLikedCards","includes","filter","id","console","log","error","message"],"sources":["C:/Users/galdv/Desktop/ReactProject/ProjectOne/src/hooks/useCardsHooks/useLikeUnlike.jsx"],"sourcesContent":["// hooks/useLikeUnlike.js\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst useLikeUnlike = ({cardId, setLikedCards}) => {\r\n  useEffect(() => {\r\n    const likeUnlike = async () => {\r\n      try {\r\n        const token = localStorage.getItem(\"token\");\r\n        const configLikes = {\r\n          method: \"patch\",\r\n          url: `https://monkfish-app-z9uza.ondigitalocean.app/bcard2/cards/${cardId}`,\r\n          headers: {\r\n            \"x-auth-token\": token,\r\n          },\r\n        };\r\n\r\n        await axios(configLikes);\r\n\r\n        // Update likedCards state\r\n        setLikedCards((prevLikedCards) => {\r\n          if (prevLikedCards.includes(cardId)) {\r\n            return prevLikedCards.filter((id) => id !== cardId); // Unlike\r\n          } else {\r\n            return [...prevLikedCards, cardId]; // Like\r\n          }\r\n        });\r\n\r\n        console.log(\"Successfully liked/unliked card\");\r\n      } catch (error) {\r\n        console.error(\"Error liking/unliking card:\", error.message);\r\n      }\r\n    };\r\n\r\n    likeUnlike();\r\n  }, [cardId, setLikedCards]);\r\n};\r\n\r\nexport default useLikeUnlike;\r\n"],"mappings":";AAAA;AACA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,aAAa,GAAGA,CAAC;EAACC,MAAM;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACjDL,SAAS,CAAC,MAAM;IACd,MAAMM,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMC,WAAW,GAAG;UAClBC,MAAM,EAAE,OAAO;UACfC,GAAG,EAAG,8DAA6DT,MAAO,EAAC;UAC3EU,OAAO,EAAE;YACP,cAAc,EAAEN;UAClB;QACF,CAAC;QAED,MAAMN,KAAK,CAACS,WAAW,CAAC;;QAExB;QACAN,aAAa,CAAEU,cAAc,IAAK;UAChC,IAAIA,cAAc,CAACC,QAAQ,CAACZ,MAAM,CAAC,EAAE;YACnC,OAAOW,cAAc,CAACE,MAAM,CAAEC,EAAE,IAAKA,EAAE,KAAKd,MAAM,CAAC,CAAC,CAAC;UACvD,CAAC,MAAM;YACL,OAAO,CAAC,GAAGW,cAAc,EAAEX,MAAM,CAAC,CAAC,CAAC;UACtC;QACF,CAAC,CAAC;QAEFe,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;MAChD,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAACC,OAAO,CAAC;MAC7D;IACF,CAAC;IAEDf,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACH,MAAM,EAAEC,aAAa,CAAC,CAAC;AAC7B,CAAC;AAACC,EAAA,CAhCIH,aAAa;AAkCnB,eAAeA,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}