{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nconst useCardsApi = () => {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchCards = async () => {\n      try {\n        const response = await axios.get('https://monkfish-app-z9uza.ondigitalocean.app/bcard2/cards');\n        setCards(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n    fetchCards();\n  }, []);\n  const likeCard = async (cardId, token) => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      await axios.patch(`https://monkfish-app-z9uza.ondigitalocean.app/bcard2/cards/${cardId}`, {}, config);\n      // After successful like, update the list of cards\n      await fetchCards(); // Call fetchCards to update the list\n    } catch (err) {\n      console.error('Error liking card:', err);\n      setError(err.message);\n    }\n  };\n  return [cards, setCards, loading, error, likeCard];\n};\n_s(useCardsApi, \"gtukppxsqAvVS85tDLMEGeSXJVg=\");\nexport default useCardsApi;","map":{"version":3,"names":["useState","useEffect","axios","useCardsApi","_s","cards","setCards","loading","setLoading","error","setError","fetchCards","response","get","data","err","message","likeCard","cardId","token","config","headers","Authorization","patch","console"],"sources":["C:/Users/galdv/Desktop/ReactProject/ProjectOne/src/hooks/useCardsHooks/useCardsApi.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useCardsApi = () => {\r\n  const [cards, setCards] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchCards = async () => {\r\n      try {\r\n        const response = await axios.get('https://monkfish-app-z9uza.ondigitalocean.app/bcard2/cards');\r\n        setCards(response.data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchCards();\r\n  }, []);\r\n\r\n  const likeCard = async (cardId, token) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      };\r\n      await axios.patch(`https://monkfish-app-z9uza.ondigitalocean.app/bcard2/cards/${cardId}`, {}, config);\r\n      // After successful like, update the list of cards\r\n      await fetchCards(); // Call fetchCards to update the list\r\n    } catch (err) {\r\n      console.error('Error liking card:', err);\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  return [cards, setCards, loading, error, likeCard];\r\n};\r\n\r\nexport default useCardsApi;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,4DAA4D,CAAC;QAC9FP,QAAQ,CAACM,QAAQ,CAACE,IAAI,CAAC;QACvBN,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOO,GAAG,EAAE;QACZL,QAAQ,CAACK,GAAG,CAACC,OAAO,CAAC;QACrBR,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,QAAQ,GAAG,MAAAA,CAAOC,MAAM,EAAEC,KAAK,KAAK;IACxC,IAAI;MACF,MAAMC,MAAM,GAAG;QACbC,OAAO,EAAE;UACPC,aAAa,EAAG,UAASH,KAAM;QACjC;MACF,CAAC;MACD,MAAMjB,KAAK,CAACqB,KAAK,CAAE,8DAA6DL,MAAO,EAAC,EAAE,CAAC,CAAC,EAAEE,MAAM,CAAC;MACrG;MACA,MAAMT,UAAU,CAAC,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,OAAOI,GAAG,EAAE;MACZS,OAAO,CAACf,KAAK,CAAC,oBAAoB,EAAEM,GAAG,CAAC;MACxCL,QAAQ,CAACK,GAAG,CAACC,OAAO,CAAC;IACvB;EACF,CAAC;EAED,OAAO,CAACX,KAAK,EAAEC,QAAQ,EAAEC,OAAO,EAAEE,KAAK,EAAEQ,QAAQ,CAAC;AACpD,CAAC;AAACb,EAAA,CArCID,WAAW;AAuCjB,eAAeA,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}