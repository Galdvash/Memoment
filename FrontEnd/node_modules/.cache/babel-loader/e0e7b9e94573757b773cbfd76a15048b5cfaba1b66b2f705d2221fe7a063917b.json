{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\galdv\\\\Desktop\\\\ReactProject\\\\ProjectOne\\\\src\\\\hooks\\\\DarkMode\\\\DarkModeContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport \"./DarkMode.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [isSun, setIsSun] = useState(() => {\n    const savedTheme = localStorage.getItem(\"theme\");\n    return savedTheme === \"dark\" ? true : false;\n  });\n  const handleIconClick = () => {\n    setIsSun(!isSun);\n  };\n  useEffect(() => {\n    if (isSun) {\n      document.body.classList.add(\"dark-mode\");\n      localStorage.setItem(\"theme\", \"dark\");\n    } else {\n      document.body.classList.remove(\"dark-mode\");\n      localStorage.setItem(\"theme\", \"light\");\n    }\n  }, [isSun]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      isSun,\n      handleIconClick\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"KXbMMtVfi2csVM41gTNTCK/7zX0=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","isSun","setIsSun","savedTheme","localStorage","getItem","handleIconClick","document","body","classList","add","setItem","remove","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/galdv/Desktop/ReactProject/ProjectOne/src/hooks/DarkMode/DarkModeContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\nimport \"./DarkMode.css\";\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  const [isSun, setIsSun] = useState(() => {\r\n    const savedTheme = localStorage.getItem(\"theme\");\r\n    return savedTheme === \"dark\" ? true : false;\r\n  });\r\n\r\n  const handleIconClick = () => {\r\n    setIsSun(!isSun);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isSun) {\r\n      document.body.classList.add(\"dark-mode\");\r\n      localStorage.setItem(\"theme\", \"dark\");\r\n    } else {\r\n      document.body.classList.remove(\"dark-mode\");\r\n      localStorage.setItem(\"theme\", \"light\");\r\n    }\r\n  }, [isSun]);\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isSun, handleIconClick }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,OAAO,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;AAE3C,OAAO,MAAMM,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,MAAM;IACvC,MAAMU,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,OAAOF,UAAU,KAAK,MAAM,GAAG,IAAI,GAAG,KAAK;EAC7C,CAAC,CAAC;EAEF,MAAMG,eAAe,GAAGA,CAAA,KAAM;IAC5BJ,QAAQ,CAAC,CAACD,KAAK,CAAC;EAClB,CAAC;EAEDP,SAAS,CAAC,MAAM;IACd,IAAIO,KAAK,EAAE;MACTM,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;MACxCN,YAAY,CAACO,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC;IACvC,CAAC,MAAM;MACLJ,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACG,MAAM,CAAC,WAAW,CAAC;MAC3CR,YAAY,CAACO,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC;IACxC;EACF,CAAC,EAAE,CAACV,KAAK,CAAC,CAAC;EAEX,oBACEL,OAAA,CAACC,YAAY,CAACgB,QAAQ;IAACC,KAAK,EAAE;MAAEb,KAAK;MAAEK;IAAgB,CAAE;IAAAP,QAAA,EACtDA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAAClB,EAAA,CAzBWF,aAAa;AAAAqB,EAAA,GAAbrB,aAAa;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}