{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContext, useState } from 'react';\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nimport { toast } from 'react-toastify';\nimport { UserContext } from './userContextApp';\nconst useUserApi = () => {\n  _s();\n  const [isSignIn, setIsSignIn] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [isLoginData, setIsLoginData] = useState({\n    email: '',\n    password: ''\n  });\n  const [data, setData] = useState({\n    name: {\n      first: '',\n      middle: '',\n      last: ''\n    },\n    phone: '',\n    email: '',\n    password: '',\n    image: {\n      url: '',\n      alt: ''\n    },\n    address: {\n      state: '',\n      country: '',\n      city: '',\n      street: '',\n      houseNumber: '',\n      zip: ''\n    },\n    isBusiness: false,\n    isAdmin: false\n  });\n  const {\n    setUserInformation\n  } = useContext(UserContext);\n  const handleSignInClick = () => {\n    setIsSignIn(false);\n  };\n  const handleSignUpClick = () => {\n    setIsSignIn(true);\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    const updatedValue = type === 'checkbox' ? checked : value;\n    setData(prevData => {\n      const keys = name.split('.');\n      if (keys.length > 1) {\n        return {\n          ...prevData,\n          [keys[0]]: {\n            ...prevData[keys[0]],\n            [keys[1]]: updatedValue\n          }\n        };\n      } else {\n        return {\n          ...prevData,\n          [name]: updatedValue\n        };\n      }\n    });\n    setIsLoginData(prevLoginData => ({\n      ...prevLoginData,\n      [name]: value\n    }));\n  };\n  const validate = () => {\n    const newErrors = {};\n    // Add your validation cases here\n\n    const validateObject = obj => {\n      Object.keys(obj).forEach(key => {\n        if (typeof obj[key] === 'object' && !Array.isArray(obj[key])) {\n          validateObject(obj[key]);\n        } else {\n          // Add validation logic here\n        }\n      });\n    };\n    validateObject(data);\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (validate()) {\n      const configRegister = {\n        method: 'post',\n        url: 'https://monkfish-app-z9uza.ondigitalocean.app/bcard2/users',\n        data\n      };\n      try {\n        const response = await axios(configRegister);\n        toast.success('Registration successful!');\n        setData({\n          name: {\n            first: '',\n            middle: '',\n            last: ''\n          },\n          phone: '',\n          email: '',\n          password: '',\n          image: {\n            url: '',\n            alt: ''\n          },\n          address: {\n            state: '',\n            country: '',\n            city: '',\n            street: '',\n            houseNumber: '',\n            zip: ''\n          },\n          isBusiness: false,\n          isAdmin: false\n        });\n        return response;\n      } catch (error) {\n        console.error(error);\n        toast.error('Registration failed!');\n      }\n    } else {\n      console.log('Validation failed');\n    }\n  };\n  const handleSubmit2 = async e => {\n    e.preventDefault();\n    const configLoding = {\n      method: 'post',\n      url: 'https://monkfish-app-z9uza.ondigitalocean.app/bcard2/users/login',\n      data: {\n        email: isLoginData.email,\n        password: isLoginData.password\n      }\n    };\n    try {\n      const response = await axios(configLoding);\n      const getToken = response.data;\n      const decoded = jwtDecode(getToken);\n      setUserInformation(decoded);\n      localStorage.setItem('token', getToken);\n      localStorage.setItem('userInfo', JSON.stringify(decoded));\n      setIsLoginData({\n        email: '',\n        password: ''\n      });\n      toast.success('Login successful!');\n    } catch (error) {\n      console.error(error);\n      toast.error('Login failed!');\n    }\n  };\n  return {\n    isSignIn,\n    errors,\n    data,\n    isLoginData,\n    handleSignInClick,\n    handleSignUpClick,\n    handleChange,\n    handleSubmit,\n    handleSubmit2\n  };\n};\n_s(useUserApi, \"qUuVL+N99C1UNmdgqbcLwX7OlhM=\");\nexport default useUserApi;","map":{"version":3,"names":["useContext","useState","axios","jwtDecode","toast","UserContext","useUserApi","_s","isSignIn","setIsSignIn","errors","setErrors","isLoginData","setIsLoginData","email","password","data","setData","name","first","middle","last","phone","image","url","alt","address","state","country","city","street","houseNumber","zip","isBusiness","isAdmin","setUserInformation","handleSignInClick","handleSignUpClick","handleChange","e","value","type","checked","target","updatedValue","prevData","keys","split","length","prevLoginData","validate","newErrors","validateObject","obj","Object","forEach","key","Array","isArray","handleSubmit","preventDefault","configRegister","method","response","success","error","console","log","handleSubmit2","configLoding","getToken","decoded","localStorage","setItem","JSON","stringify"],"sources":["C:/Users/galdv/Desktop/ReactProject/ProjectOne/src/hooks/UserHooks/useUserApi.jsx"],"sourcesContent":["import { useContext, useState } from 'react';\r\nimport axios from 'axios';\r\nimport jwtDecode from 'jwt-decode';\r\nimport { toast } from 'react-toastify';\r\nimport { UserContext } from './userContextApp';\r\n\r\nconst useUserApi = () => {\r\n  const [isSignIn, setIsSignIn] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [isLoginData, setIsLoginData] = useState({ email: '', password: '' });\r\n  const [data, setData] = useState({\r\n    name: { first: '', middle: '', last: '' },\r\n    phone: '',\r\n    email: '',\r\n    password: '',\r\n    image: { url: '', alt: '' },\r\n    address: {\r\n      state: '',\r\n      country: '',\r\n      city: '',\r\n      street: '',\r\n      houseNumber: '',\r\n      zip: '',\r\n    },\r\n    isBusiness: false,\r\n    isAdmin: false,\r\n  });\r\n  const { setUserInformation } = useContext(UserContext);\r\n\r\n  const handleSignInClick = () => {\r\n    setIsSignIn(false);\r\n  };\r\n\r\n  const handleSignUpClick = () => {\r\n    setIsSignIn(true);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    const updatedValue = type === 'checkbox' ? checked : value;\r\n\r\n    setData((prevData) => {\r\n      const keys = name.split('.');\r\n      if (keys.length > 1) {\r\n        return {\r\n          ...prevData,\r\n          [keys[0]]: {\r\n            ...prevData[keys[0]],\r\n            [keys[1]]: updatedValue,\r\n          },\r\n        };\r\n      } else {\r\n        return {\r\n          ...prevData,\r\n          [name]: updatedValue,\r\n        };\r\n      }\r\n    });\r\n\r\n    setIsLoginData((prevLoginData) => ({\r\n      ...prevLoginData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const validate = () => {\r\n    const newErrors = {};\r\n    // Add your validation cases here\r\n\r\n    const validateObject = (obj) => {\r\n      Object.keys(obj).forEach((key) => {\r\n        if (typeof obj[key] === 'object' && !Array.isArray(obj[key])) {\r\n          validateObject(obj[key]);\r\n        } else {\r\n          // Add validation logic here\r\n        }\r\n      });\r\n    };\r\n\r\n    validateObject(data);\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (validate()) {\r\n      const configRegister = {\r\n        method: 'post',\r\n        url: 'https://monkfish-app-z9uza.ondigitalocean.app/bcard2/users',\r\n        data,\r\n      };\r\n      try {\r\n        const response = await axios(configRegister);\r\n        toast.success('Registration successful!');\r\n        setData({\r\n          name: { first: '', middle: '', last: '' },\r\n          phone: '',\r\n          email: '',\r\n          password: '',\r\n          image: { url: '', alt: '' },\r\n          address: {\r\n            state: '',\r\n            country: '',\r\n            city: '',\r\n            street: '',\r\n            houseNumber: '',\r\n            zip: '',\r\n          },\r\n          isBusiness: false,\r\n          isAdmin: false,\r\n        });\r\n        return response;\r\n      } catch (error) {\r\n        console.error(error);\r\n        toast.error('Registration failed!');\r\n      }\r\n    } else {\r\n      console.log('Validation failed');\r\n    }\r\n  };\r\n\r\n  const handleSubmit2 = async (e) => {\r\n    e.preventDefault();\r\n    const configLoding = {\r\n      method: 'post',\r\n      url: 'https://monkfish-app-z9uza.ondigitalocean.app/bcard2/users/login',\r\n      data: {\r\n        email: isLoginData.email,\r\n        password: isLoginData.password,\r\n      },\r\n    };\r\n    try {\r\n      const response = await axios(configLoding);\r\n      const getToken = response.data;\r\n      const decoded = jwtDecode(getToken);\r\n      setUserInformation(decoded);\r\n      localStorage.setItem('token', getToken);\r\n      localStorage.setItem('userInfo', JSON.stringify(decoded));\r\n      setIsLoginData({ email: '', password: '' });\r\n      toast.success('Login successful!');\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error('Login failed!');\r\n    }\r\n  };\r\n\r\n  return {\r\n    isSignIn,\r\n    errors,\r\n    data,\r\n    isLoginData,\r\n    handleSignInClick,\r\n    handleSignUpClick,\r\n    handleChange,\r\n    handleSubmit,\r\n    handleSubmit2,\r\n  };\r\n};\r\n\r\nexport default useUserApi;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}