{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\galdv\\\\Desktop\\\\MeMoment\\\\Memoment\\\\FrontEnd\\\\src\\\\component\\\\EventPhoneUpload\\\\OTPVerification.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OTPVerification = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [message, setMessage] = useState(\"\");\n\n  // Handle file selection\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n\n  // Send OTP to all numbers in the file\n  const handleSendMessages = async () => {\n    if (!file) {\n      setMessage(\"Please select a file first.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/events/upload-phone-list\",\n      // נתיב להעלאת קובץ ושליחת הודעות\n      formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setMessage(response.data.message); // הודעה מוצגת אחרי שליחה מוצלחת\n    } catch (error) {\n      console.error(\"Error sending messages:\", error);\n      setMessage(\"Error sending messages.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      paddingTop: \"100px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Send OTP to All Phone Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".xlsx, .csv\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendMessages,\n      children: \"Send Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(OTPVerification, \"90rxx89DAeVfO1aRLt0hivI8MC0=\");\n_c = OTPVerification;\nexport default OTPVerification;\nvar _c;\n$RefreshReg$(_c, \"OTPVerification\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","OTPVerification","_s","file","setFile","message","setMessage","handleFileChange","e","target","files","handleSendMessages","formData","FormData","append","response","post","headers","data","error","console","style","paddingTop","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/galdv/Desktop/MeMoment/Memoment/FrontEnd/src/component/EventPhoneUpload/OTPVerification.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst OTPVerification = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  // Handle file selection\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  // Send OTP to all numbers in the file\r\n  const handleSendMessages = async () => {\r\n    if (!file) {\r\n      setMessage(\"Please select a file first.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/api/events/upload-phone-list\", // נתיב להעלאת קובץ ושליחת הודעות\r\n        formData,\r\n        {\r\n          headers: { \"Content-Type\": \"multipart/form-data\" },\r\n        }\r\n      );\r\n      setMessage(response.data.message); // הודעה מוצגת אחרי שליחה מוצלחת\r\n    } catch (error) {\r\n      console.error(\"Error sending messages:\", error);\r\n      setMessage(\"Error sending messages.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ paddingTop: \"100px\" }}>\r\n      <h1>Send OTP to All Phone Numbers</h1>\r\n      <input type=\"file\" accept=\".xlsx, .csv\" onChange={handleFileChange} />\r\n      <button onClick={handleSendMessages}>Send Messages</button>\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OTPVerification;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,MAAMU,gBAAgB,GAAIC,CAAC,IAAK;IAC9BJ,OAAO,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC;;EAED;EACA,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI,CAACR,IAAI,EAAE;MACTG,UAAU,CAAC,6BAA6B,CAAC;MACzC;IACF;IAEA,MAAMM,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEX,IAAI,CAAC;IAE7B,IAAI;MACF,MAAMY,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAC/B,oDAAoD;MAAE;MACtDJ,QAAQ,EACR;QACEK,OAAO,EAAE;UAAE,cAAc,EAAE;QAAsB;MACnD,CACF,CAAC;MACDX,UAAU,CAACS,QAAQ,CAACG,IAAI,CAACb,OAAO,CAAC,CAAC,CAAC;IACrC,CAAC,CAAC,OAAOc,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/Cb,UAAU,CAAC,yBAAyB,CAAC;IACvC;EACF,CAAC;EAED,oBACEN,OAAA;IAAKqB,KAAK,EAAE;MAAEC,UAAU,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAClCvB,OAAA;MAAAuB,QAAA,EAAI;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtC3B,OAAA;MAAO4B,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,aAAa;MAACC,QAAQ,EAAEvB;IAAiB;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtE3B,OAAA;MAAQ+B,OAAO,EAAEpB,kBAAmB;MAAAY,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC1DtB,OAAO,iBAAIL,OAAA;MAAAuB,QAAA,EAAIlB;IAAO;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV,CAAC;AAACzB,EAAA,CA1CID,eAAe;AAAA+B,EAAA,GAAf/B,eAAe;AA4CrB,eAAeA,eAAe;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}